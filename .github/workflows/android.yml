name: android

on:
  workflow_dispatch:

jobs:
  build-arm64-android:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends gettext

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Clone Minetest from Codeberg
        run: |
          git clone --depth 1 https://codeberg.org/halon/Minetest.git minetest

      - name: Clone mcl_localplayer mod
        working-directory: minetest
        run: |
          git clone --depth 1 https://codeberg.org/halon/mcl_localplayer.git clientmods/mcl_localplayer
          echo "load_mod_mcl_localplayer = true" > clientmods/mods.conf

      - name: Apply patch
        working-directory: minetest
        run: |
          git apply ../android/clientmods_android.diff

      # 1) Build Debug first to ensure ~/.android/debug.keystore exists
      - name: Build Debug APKs (all ABIs)
        working-directory: minetest/android
        run: ./gradlew --no-daemon assembleDebug -x lint -x test

      # 2) Point release signing to the debug keystore via local.properties
      #    build.gradle reads ../local.properties relative to android/app
      - name: Configure Release signing with debug keystore
        working-directory: minetest/android
        run: |
          echo "keystore=$HOME/.android/debug.keystore" > local.properties
          echo "keystore.password=android" >> local.properties
          echo "key=androiddebugkey" >> local.properties
          echo "key.password=android" >> local.properties

      # 3) Build Release; APKs will be signed with the debug key
      - name: Build Release APKs (signed with debug key)
        working-directory: minetest/android
        run: ./gradlew --no-daemon assembleRelease -x lint -x test

      # Optional: list outputs to make debugging easier
      - name: List built APKs
        run: |
          echo "Debug APKs:"
          ls -lah minetest/android/app/build/outputs/apk/debug || true
          echo "Release APKs:"
          ls -lah minetest/android/app/build/outputs/apk/release || true

      - name: Upload Debug APKs (all ABIs)
        uses: actions/upload-artifact@v4
        with:
          name: debug-apks
          path: minetest/android/app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Upload Release APKs (signed with debug key)
        uses: actions/upload-artifact@v4
        with:
          name: release-apks-debug-key
          path: minetest/android/app/build/outputs/apk/release/*.apk
          if-no-files-found: error
